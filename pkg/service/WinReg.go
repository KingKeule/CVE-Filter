package service

import (
	"log"

	"golang.org/x/sys/windows/registry"
)

const regWinInternetSet = `Software\Microsoft\Windows\CurrentVersion\Internet Settings`

// GetWinUserProxy returns the user-specific Windows proxy information stored in the registry.
func GetWinUserProxy() (bool, string, string, error) { // eventl klein schreiben
	winUserSysProxyEnabled := false

	k, err := registry.OpenKey(registry.CURRENT_USER, regWinInternetSet, registry.QUERY_VALUE)
	if err != nil {
		log.Printf("Windows registry problem for \"%s\". Error: %s", regWinInternetSet, err)
		return winUserSysProxyEnabled, "", "", err
	}
	defer k.Close()

	winUserSysProxyEnabledInt, _, err := k.GetIntegerValue("ProxyEnable")
	if err != nil {
		log.Printf("Windows registry problem for \"ProxyEnable\". Error: %s", err)
	}
	if winUserSysProxyEnabledInt == 1 {
		winUserSysProxyEnabled = true
	}

	winUserSysProxyServer, _, err := k.GetStringValue("ProxyServer")
	if err != nil {
		log.Printf("Windows registry problem for \"ProxyServer\". Error: %s", err)
		winUserSysProxyServer = "ERROR. See log for details."
	}

	winUserSysProxyScript, _, err := k.GetStringValue("AutoConfigURL")
	if err != nil {
		log.Printf("Windows registry problem for \"AutoConfigURL\". Error: %s", err)
		winUserSysProxyScript = "ERROR. See log for details."
	}

	return winUserSysProxyEnabled, winUserSysProxyServer, winUserSysProxyScript, nil
}
