package config

import (
	"log"

	"fyne.io/fyne/v2/data/binding"
)

type CVEFilter struct {
	BindingData CVEFilterBinding
	BoolData    CVEFilterBool
}

type CVEFilterBinding struct {
	FilterBaseScoreMin     binding.Float
	FilterBaseScoreMax     binding.Float
	FilterBaseSeverityLow  binding.Bool
	FilterBaseSeverityMed  binding.Bool
	FilterBaseSeverityHigh binding.Bool
	FilterBaseSeverityCrit binding.Bool
	FilterAVN              binding.Bool
	FilterAVA              binding.Bool
	FilterAVL              binding.Bool
	FilterAVP              binding.Bool
	FilterACL              binding.Bool
	FilterACH              binding.Bool
	FilterPRN              binding.Bool
	FilterPRL              binding.Bool
	FilterPRH              binding.Bool
	FilterUIN              binding.Bool
	FilterUIR              binding.Bool
	FilterSU               binding.Bool
	FilterSC               binding.Bool
	FilterCN               binding.Bool
	FilterCL               binding.Bool
	FilterCH               binding.Bool
	FilterIN               binding.Bool
	FilterIL               binding.Bool
	FilterIH               binding.Bool
	FilterAN               binding.Bool
	FilterAL               binding.Bool
	FilterAH               binding.Bool
}

type CVEFilterBool struct {
	FilterBaseScoreMin     float64 `json:"BaseScore_Min"`
	FilterBaseScoreMax     float64 `json:"BaseScore_Max"`
	FilterBaseSeverityLow  bool    `json:"BaseSeverityLow"`
	FilterBaseSeverityMed  bool    `json:"BaseSeverityMed"`
	FilterBaseSeverityHigh bool    `json:"BaseSeverityHigh"`
	FilterBaseSeverityCrit bool    `json:"BaseSeverityCrit"`
	FilterAVN              bool    `json:"AttackVector_Network"`
	FilterAVA              bool    `json:"AttackVector_Adjacent"`
	FilterAVL              bool    `json:"AttackVector_Local"`
	FilterAVP              bool    `json:"AttackVector_Physical"`
	FilterACL              bool    `json:"AttackComplexity_Low"`
	FilterACH              bool    `json:"AttackComplexity_High"`
	FilterPRN              bool    `json:"PrivilegesRequired_None"`
	FilterPRL              bool    `json:"PrivilegesRequired_Low"`
	FilterPRH              bool    `json:"PrivilegesRequired_High"`
	FilterUIN              bool    `json:"UserInteraction_None"`
	FilterUIR              bool    `json:"UserInteraction_Required"`
	FilterSU               bool    `json:"Scope_Unchanged"`
	FilterSC               bool    `json:"Scope_Changed"`
	FilterCN               bool    `json:"Confidentiality_None"`
	FilterCL               bool    `json:"Confidentiality_Low"`
	FilterCH               bool    `json:"Confidentiality_High"`
	FilterIN               bool    `json:"Integrity_None"`
	FilterIL               bool    `json:"Integrity_Low"`
	FilterIH               bool    `json:"Integrity_High"`
	FilterAN               bool    `json:"Availability_None"`
	FilterAL               bool    `json:"Availability_Low"`
	FilterAH               bool    `json:"Availability_High"`
}

// Create the default CVE filter
func createDefaultCVEFilter() CVEFilter {
	log.Println("Create the default CVE filter.")

	var actCVEFilter CVEFilter

	// Base Score
	actCVEFilter.BindingData.FilterBaseScoreMin = binding.NewFloat()
	actCVEFilter.BindingData.FilterBaseScoreMax = binding.NewFloat()

	// Base Severity
	actCVEFilter.BindingData.FilterBaseSeverityLow = binding.NewBool()
	actCVEFilter.BindingData.FilterBaseSeverityMed = binding.NewBool()
	actCVEFilter.BindingData.FilterBaseSeverityHigh = binding.NewBool()
	actCVEFilter.BindingData.FilterBaseSeverityCrit = binding.NewBool()

	// Attack vector
	actCVEFilter.BindingData.FilterAVN = binding.NewBool()
	actCVEFilter.BindingData.FilterAVA = binding.NewBool()
	actCVEFilter.BindingData.FilterAVL = binding.NewBool()
	actCVEFilter.BindingData.FilterAVP = binding.NewBool()
	// actCVEFilter.BindingData.FilterAVN.Set(true)
	// actCVEFilter.BindingData.FilterAVA.Set(true)
	// actCVEFilter.BindingData.FilterAVL.Set(true)
	// actCVEFilter.BindingData.FilterAVP.Set(true)

	// Attack complexity
	actCVEFilter.BindingData.FilterACL = binding.NewBool()
	actCVEFilter.BindingData.FilterACH = binding.NewBool()
	// actCVEFilter.BindingData.FilterACL.Set(true)
	// actCVEFilter.BindingData.FilterACH.Set(true)

	// Privileges required
	actCVEFilter.BindingData.FilterPRN = binding.NewBool()
	actCVEFilter.BindingData.FilterPRL = binding.NewBool()
	actCVEFilter.BindingData.FilterPRH = binding.NewBool()
	// actCVEFilter.BindingData.FilterPRN.Set(true)
	// actCVEFilter.BindingData.FilterPRL.Set(true)
	// actCVEFilter.BindingData.FilterPRH.Set(true)

	// User interaction
	actCVEFilter.BindingData.FilterUIN = binding.NewBool()
	actCVEFilter.BindingData.FilterUIR = binding.NewBool()
	// actCVEFilter.BindingData.FilterUIN.Set(true)
	// actCVEFilter.BindingData.FilterUIR.Set(true)

	// Scope
	actCVEFilter.BindingData.FilterSU = binding.NewBool()
	actCVEFilter.BindingData.FilterSC = binding.NewBool()
	// actCVEFilter.BindingData.FilterSU.Set(true)
	// actCVEFilter.BindingData.FilterSC.Set(true)

	// Confidentiality
	actCVEFilter.BindingData.FilterCN = binding.NewBool()
	actCVEFilter.BindingData.FilterCL = binding.NewBool()
	actCVEFilter.BindingData.FilterCH = binding.NewBool()
	// actCVEFilter.BindingData.FilterCN.Set(true)
	// actCVEFilter.BindingData.FilterCL.Set(true)
	// actCVEFilter.BindingData.FilterCH.Set(true)

	// Integrity
	actCVEFilter.BindingData.FilterIN = binding.NewBool()
	actCVEFilter.BindingData.FilterIL = binding.NewBool()
	actCVEFilter.BindingData.FilterIH = binding.NewBool()
	// actCVEFilter.BindingData.FilterIN.Set(true)
	// actCVEFilter.BindingData.FilterIL.Set(true)
	// actCVEFilter.BindingData.FilterIH.Set(true)

	// Availability
	actCVEFilter.BindingData.FilterAN = binding.NewBool()
	actCVEFilter.BindingData.FilterAL = binding.NewBool()
	actCVEFilter.BindingData.FilterAH = binding.NewBool()
	// actCVEFilter.BindingData.FilterAN.Set(true)
	// actCVEFilter.BindingData.FilterAL.Set(true)
	// actCVEFilter.BindingData.FilterAH.Set(true)

	return actCVEFilter
}

func GetCVEFilterBind(actCVEFilterBool CVEFilterBool) CVEFilterBinding {
	log.Println("Create a CVE filter with bindings from bool values.")

	var actCVEFilterBinding CVEFilterBinding

	// Base Score
	actCVEFilterBinding.FilterBaseScoreMin = binding.NewFloat()
	actCVEFilterBinding.FilterBaseScoreMax = binding.NewFloat()
	actCVEFilterBinding.FilterBaseScoreMin.Set(float64(actCVEFilterBool.FilterBaseScoreMin))
	actCVEFilterBinding.FilterBaseScoreMax.Set(float64(actCVEFilterBool.FilterBaseScoreMax))

	// Base Severity
	actCVEFilterBinding.FilterBaseSeverityLow = binding.NewBool()
	actCVEFilterBinding.FilterBaseSeverityMed = binding.NewBool()
	actCVEFilterBinding.FilterBaseSeverityHigh = binding.NewBool()
	actCVEFilterBinding.FilterBaseSeverityCrit = binding.NewBool()
	actCVEFilterBinding.FilterBaseSeverityLow.Set(actCVEFilterBool.FilterBaseSeverityLow)
	actCVEFilterBinding.FilterBaseSeverityMed.Set(actCVEFilterBool.FilterBaseSeverityMed)
	actCVEFilterBinding.FilterBaseSeverityHigh.Set(actCVEFilterBool.FilterBaseSeverityHigh)
	actCVEFilterBinding.FilterBaseSeverityCrit.Set(actCVEFilterBool.FilterBaseSeverityCrit)

	// Attack vector
	actCVEFilterBinding.FilterAVN = binding.NewBool()
	actCVEFilterBinding.FilterAVA = binding.NewBool()
	actCVEFilterBinding.FilterAVL = binding.NewBool()
	actCVEFilterBinding.FilterAVP = binding.NewBool()
	actCVEFilterBinding.FilterAVN.Set(actCVEFilterBool.FilterAVN)
	actCVEFilterBinding.FilterAVA.Set(actCVEFilterBool.FilterAVA)
	actCVEFilterBinding.FilterAVL.Set(actCVEFilterBool.FilterAVL)
	actCVEFilterBinding.FilterAVP.Set(actCVEFilterBool.FilterAVP)

	// Attack complexity
	actCVEFilterBinding.FilterACL = binding.NewBool()
	actCVEFilterBinding.FilterACH = binding.NewBool()
	actCVEFilterBinding.FilterACL.Set(actCVEFilterBool.FilterACL)
	actCVEFilterBinding.FilterACH.Set(actCVEFilterBool.FilterACH)

	// Privileges required
	actCVEFilterBinding.FilterPRN = binding.NewBool()
	actCVEFilterBinding.FilterPRL = binding.NewBool()
	actCVEFilterBinding.FilterPRH = binding.NewBool()
	actCVEFilterBinding.FilterPRN.Set(actCVEFilterBool.FilterPRN)
	actCVEFilterBinding.FilterPRL.Set(actCVEFilterBool.FilterPRL)
	actCVEFilterBinding.FilterPRH.Set(actCVEFilterBool.FilterPRH)

	// User interaction
	actCVEFilterBinding.FilterUIN = binding.NewBool()
	actCVEFilterBinding.FilterUIR = binding.NewBool()
	actCVEFilterBinding.FilterUIN.Set(actCVEFilterBool.FilterUIN)
	actCVEFilterBinding.FilterUIR.Set(actCVEFilterBool.FilterUIR)

	// Scope
	actCVEFilterBinding.FilterSU = binding.NewBool()
	actCVEFilterBinding.FilterSC = binding.NewBool()
	actCVEFilterBinding.FilterSU.Set(actCVEFilterBool.FilterSU)
	actCVEFilterBinding.FilterSC.Set(actCVEFilterBool.FilterSC)

	// Confidentiality
	actCVEFilterBinding.FilterCN = binding.NewBool()
	actCVEFilterBinding.FilterCL = binding.NewBool()
	actCVEFilterBinding.FilterCH = binding.NewBool()
	actCVEFilterBinding.FilterCN.Set(actCVEFilterBool.FilterCN)
	actCVEFilterBinding.FilterCL.Set(actCVEFilterBool.FilterCL)
	actCVEFilterBinding.FilterCH.Set(actCVEFilterBool.FilterCH)

	// Integrity
	actCVEFilterBinding.FilterIN = binding.NewBool()
	actCVEFilterBinding.FilterIL = binding.NewBool()
	actCVEFilterBinding.FilterIH = binding.NewBool()
	actCVEFilterBinding.FilterIN.Set(actCVEFilterBool.FilterIN)
	actCVEFilterBinding.FilterIL.Set(actCVEFilterBool.FilterIL)
	actCVEFilterBinding.FilterIH.Set(actCVEFilterBool.FilterIH)

	// Availability
	actCVEFilterBinding.FilterAN = binding.NewBool()
	actCVEFilterBinding.FilterAL = binding.NewBool()
	actCVEFilterBinding.FilterAH = binding.NewBool()
	actCVEFilterBinding.FilterAN.Set(actCVEFilterBool.FilterAN)
	actCVEFilterBinding.FilterAL.Set(actCVEFilterBool.FilterAL)
	actCVEFilterBinding.FilterAH.Set(actCVEFilterBool.FilterAH)

	return actCVEFilterBinding
}

// Return only the bool values from a binding bool object
func GetCVEFilterBool(cveFilterBind CVEFilterBinding) CVEFilterBool {
	log.Println("Get all bool values from binding data of the CVE filter.")

	var actCVEFilterBool CVEFilterBool

	// Base Score
	actCVEFilterBool.FilterBaseScoreMin, _ = cveFilterBind.FilterBaseScoreMin.Get()
	actCVEFilterBool.FilterBaseScoreMax, _ = cveFilterBind.FilterBaseScoreMax.Get()

	// Base Severity
	actCVEFilterBool.FilterBaseSeverityLow, _ = cveFilterBind.FilterBaseSeverityLow.Get()
	actCVEFilterBool.FilterBaseSeverityMed, _ = cveFilterBind.FilterBaseSeverityMed.Get()
	actCVEFilterBool.FilterBaseSeverityHigh, _ = cveFilterBind.FilterBaseSeverityHigh.Get()
	actCVEFilterBool.FilterBaseSeverityCrit, _ = cveFilterBind.FilterBaseSeverityCrit.Get()

	// Attack vector
	actCVEFilterBool.FilterAVN, _ = cveFilterBind.FilterAVN.Get()
	actCVEFilterBool.FilterAVA, _ = cveFilterBind.FilterAVA.Get()
	actCVEFilterBool.FilterAVL, _ = cveFilterBind.FilterAVL.Get()
	actCVEFilterBool.FilterAVP, _ = cveFilterBind.FilterAVP.Get()

	// Attack complexity
	actCVEFilterBool.FilterACL, _ = cveFilterBind.FilterACL.Get()
	actCVEFilterBool.FilterACH, _ = cveFilterBind.FilterACH.Get()

	// Privileges required
	actCVEFilterBool.FilterPRN, _ = cveFilterBind.FilterPRN.Get()
	actCVEFilterBool.FilterPRL, _ = cveFilterBind.FilterPRL.Get()
	actCVEFilterBool.FilterPRH, _ = cveFilterBind.FilterPRH.Get()

	// User interaction
	actCVEFilterBool.FilterUIN, _ = cveFilterBind.FilterUIN.Get()
	actCVEFilterBool.FilterUIR, _ = cveFilterBind.FilterUIR.Get()

	// Scope
	actCVEFilterBool.FilterSU, _ = cveFilterBind.FilterSU.Get()
	actCVEFilterBool.FilterSC, _ = cveFilterBind.FilterSC.Get()

	// Confidentiality
	actCVEFilterBool.FilterCN, _ = cveFilterBind.FilterCN.Get()
	actCVEFilterBool.FilterCL, _ = cveFilterBind.FilterCL.Get()
	actCVEFilterBool.FilterCH, _ = cveFilterBind.FilterCH.Get()

	// Integrity
	actCVEFilterBool.FilterIN, _ = cveFilterBind.FilterIN.Get()
	actCVEFilterBool.FilterIL, _ = cveFilterBind.FilterIL.Get()
	actCVEFilterBool.FilterIH, _ = cveFilterBind.FilterIH.Get()

	// Availability
	actCVEFilterBool.FilterAN, _ = cveFilterBind.FilterAN.Get()
	actCVEFilterBool.FilterAL, _ = cveFilterBind.FilterAL.Get()
	actCVEFilterBool.FilterAH, _ = cveFilterBind.FilterAH.Get()

	return actCVEFilterBool
}

// reset the filter values to false
func ResetCVEFilter(actCVEFilter CVEFilter) {
	log.Println("Set all filter values to false.")

	// Base Score
	actCVEFilter.BindingData.FilterBaseScoreMin.Set(0.0)
	actCVEFilter.BindingData.FilterBaseScoreMax.Set(10.0)

	// Base Severity
	actCVEFilter.BindingData.FilterBaseSeverityLow.Set(false)
	actCVEFilter.BindingData.FilterBaseSeverityMed.Set(false)
	actCVEFilter.BindingData.FilterBaseSeverityHigh.Set(false)
	actCVEFilter.BindingData.FilterBaseSeverityCrit.Set(false)

	// Attack vector
	actCVEFilter.BindingData.FilterAVN.Set(false)
	actCVEFilter.BindingData.FilterAVA.Set(false)
	actCVEFilter.BindingData.FilterAVL.Set(false)
	actCVEFilter.BindingData.FilterAVP.Set(false)

	// Attack complexity
	actCVEFilter.BindingData.FilterACL.Set(false)
	actCVEFilter.BindingData.FilterACH.Set(false)

	// Privileges required
	actCVEFilter.BindingData.FilterPRN.Set(false)
	actCVEFilter.BindingData.FilterPRL.Set(false)
	actCVEFilter.BindingData.FilterPRH.Set(false)

	// User interaction
	actCVEFilter.BindingData.FilterUIN.Set(false)
	actCVEFilter.BindingData.FilterUIR.Set(false)

	// Scope
	actCVEFilter.BindingData.FilterSU.Set(false)
	actCVEFilter.BindingData.FilterSC.Set(false)

	// Confidentiality
	actCVEFilter.BindingData.FilterCN.Set(false)
	actCVEFilter.BindingData.FilterCL.Set(false)
	actCVEFilter.BindingData.FilterCH.Set(false)

	// Integrity
	actCVEFilter.BindingData.FilterIN.Set(false)
	actCVEFilter.BindingData.FilterIL.Set(false)
	actCVEFilter.BindingData.FilterIH.Set(false)

	// Availability
	actCVEFilter.BindingData.FilterAN.Set(false)
	actCVEFilter.BindingData.FilterAL.Set(false)
	actCVEFilter.BindingData.FilterAH.Set(false)
}
